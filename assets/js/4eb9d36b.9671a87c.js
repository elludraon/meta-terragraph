"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2846],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1151:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],l={},s="Release Conventions",c={unversionedId:"developer/Release_Conventions",id:"developer/Release_Conventions",title:"Release Conventions",description:"This document describes Terragraph's software release conventions. Note that the",source:"@site/../docs/developer/Release_Conventions.md",sourceDirName:"developer",slug:"/developer/Release_Conventions",permalink:"/docs/developer/Release_Conventions",draft:!1,editUrl:"https://github.com/terragraph/meta-terragraph/edit/main/docs/../docs/developer/Release_Conventions.md",tags:[],version:"current",frontMatter:{},sidebar:"developerManualSidebar",previous:{title:"Security",permalink:"/docs/developer/Security"},next:{title:"Firmware Versioning",permalink:"/docs/developer/Firmware_Versioning"}},p={},u=[{value:"Tagging &amp; Branching",id:"tagging--branching",level:2},{value:"Release Schedule",id:"release-schedule",level:2},{value:"Backwards Compatibility",id:"backwards-compatibility",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"release-conventions"},"Release Conventions"),(0,i.kt)("p",null,"This document describes Terragraph's software release conventions. Note that the\nNMS stack follows a different procedure and is not described here."),(0,i.kt)("h2",{id:"tagging--branching"},"Tagging & Branching"),(0,i.kt)("p",null,"Terragraph uses Git to manage its code repository. ",(0,i.kt)("em",{parentName:"p"},"Tags")," and ",(0,i.kt)("em",{parentName:"p"},"branches")," are\nused to mark releases as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"main")," is the sole development branch."),(0,i.kt)("li",{parentName:"ul"},'A "pre-release" tag is created at the start of development for a major\nrelease, e.g. ',(0,i.kt)("inlineCode",{parentName:"li"},"RELEASE_M77_PRE"),". This tag is not synced externally."),(0,i.kt)("li",{parentName:"ul"},'A "major release" tag is created when a release is finalized, e.g.\n',(0,i.kt)("inlineCode",{parentName:"li"},"RELEASE_M77"),' ("Release M77").'),(0,i.kt)("li",{parentName:"ul"},"A release branch is cut at every major release tag, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"releases/m77"),"."),(0,i.kt)("li",{parentName:"ul"},'If necessary, bug fixes will be committed on top of a release branch, and a\n"minor release" tag will be created when finalized, e.g. ',(0,i.kt)("inlineCode",{parentName:"li"},"RELEASE_M77_1"),'\n("Release M77.1").'),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"VERSION")," file at the root of the repository will contain the current tag.")),(0,i.kt)("p",null,"Only the top of a release branch should be considered stable, as these commits\nhave gone through regression, integration, and/or field testing prior to being\ntagged."),(0,i.kt)("h2",{id:"release-schedule"},"Release Schedule"),(0,i.kt)("p",null,"There is no set schedule for Terragraph releases. Release frequency will depend\non the volume of changes as well as available testing capacity."),(0,i.kt)("p",null,"Major releases which pass rigorous testing may be promoted to long-term support\n(LTS) releases no less than 3 months apart. Each LTS release will be supported\nfor 6 months or until the next LTS release is made (whichever is longer), and\nwill have critical fixes cherry-picked into the branch until its end of life.\nLTS releases are shown in the table below."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"LTS Version"),(0,i.kt)("th",{parentName:"tr",align:null},"Initial Release Date"),(0,i.kt)("th",{parentName:"tr",align:null},"End of Life"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"M77"),(0,i.kt)("td",{parentName:"tr",align:null},"Aug 29, 2021"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"M60"),(0,i.kt)("td",{parentName:"tr",align:null},"Sep 28, 2020"),(0,i.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,i.kt)("h2",{id:"backwards-compatibility"},"Backwards Compatibility"),(0,i.kt)("p",null,"In general, every effort should be made to preserve backwards compatibility for\nnode and cloud software, both between sequential releases and LTS releases. Any\nbreaking changes that require user intervention or special upgrade steps should\nbe highlighted in release notes. When possible, any breaking changes in\nconfiguration should be migrated automatically to avoid user intervention (see\n",(0,i.kt)("a",{parentName:"p",href:"/docs/developer/Configuration_Management#configuration-management-breaking-changes"},"Breaking Changes"),")."))}m.isMDXComponent=!0}}]);